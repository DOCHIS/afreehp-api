service: afreehp-api

# provider 설정
provider:
  name: aws
  runtime: nodejs18.x
  stage: dev
  region: ap-northeast-2
  architecture: arm64
  memorySize: 1024
  iamRoleStatements:
    - Effect: Allow
      Action:
        - apigateway:ManageConnections
        - execute-api:ManageConnection
      Resource: 'arn:aws:execute-api:ap-northeast-2:*:*'
    - Effect: Allow
      Action:
        - sqs:SendMessage
        - sqs:ReceiveMessage
        - sqs:DeleteMessage
        - sqs:GetQueueAttributes
      Resource: 'arn:aws:sqs:ap-northeast-2:*:*'
    - Effect: Allow
      Action:
        - dynamodb:Query
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
        - dynamodb:DeleteItem
        - dynamodb:CreateTable
      Resource: 'arn:aws:dynamodb:ap-northeast-2:*:*'

# plugins 설정
plugins:
  - serverless-offline

# functions 설정
functions:
  app:
    timeout: 10
    handler: handler/app.handler
    environment: ${file(env.${opt:stage, self:provider.stage}.js)}
    events:
      - httpApi: "*"
  connect:
    timeout: 10
    handler: handler/websocket.connect
    environment: ${file(env.${opt:stage, self:provider.stage}.js)}
    events:
      - websocket:
          route: $connect
  disconnect:
    timeout: 10
    handler: handler/websocket.disconnect
    environment: ${file(env.${opt:stage, self:provider.stage}.js)}
    events:
      - websocket:
          route: $disconnect
  message:
    timeout: 20
    handler: handler/websocket.message
    environment: ${file(env.${opt:stage, self:provider.stage}.js)}
    events:
      - websocket:
          route: $default
  logger:
    timeout: 5
    handler: handler/logger.handler
    environment: ${file(env.${opt:stage, self:provider.stage}.js)}
    events:
      - cloudwatchLog:
          logGroup: /aws/lambda/afreehp-api-${self:provider.stage}-app
          filter: '[timestamp=*Z, request_id="*-*", event]'
      - cloudwatchLog:
          logGroup: /aws/lambda/afreehp-api-${self:provider.stage}-connect
          filter: '[timestamp=*Z, request_id="*-*", event]'
      - cloudwatchLog:
          logGroup: /aws/lambda/afreehp-api-${self:provider.stage}-disconnect
          filter: '[timestamp=*Z, request_id="*-*", event]'
      - cloudwatchLog:
          logGroup: /aws/lambda/afreehp-api-${self:provider.stage}-message
          filter: '[timestamp=*Z, request_id="*-*", event]'